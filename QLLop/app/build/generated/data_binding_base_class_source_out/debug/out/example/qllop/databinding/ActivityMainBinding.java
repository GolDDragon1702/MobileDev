// Generated by view binder compiler. Do not edit!
package example.qllop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import example.qllop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCreateDB;

  @NonNull
  public final Button btnDanhSachLop;

  @NonNull
  public final Button btnDanhSachSinhVien;

  @NonNull
  public final Button btnNhapLop;

  @NonNull
  public final Button btnNhapSinhVien;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnCreateDB,
      @NonNull Button btnDanhSachLop, @NonNull Button btnDanhSachSinhVien,
      @NonNull Button btnNhapLop, @NonNull Button btnNhapSinhVien) {
    this.rootView = rootView;
    this.btnCreateDB = btnCreateDB;
    this.btnDanhSachLop = btnDanhSachLop;
    this.btnDanhSachSinhVien = btnDanhSachSinhVien;
    this.btnNhapLop = btnNhapLop;
    this.btnNhapSinhVien = btnNhapSinhVien;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCreateDB;
      Button btnCreateDB = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateDB == null) {
        break missingId;
      }

      id = R.id.btnDanhSachLop;
      Button btnDanhSachLop = ViewBindings.findChildViewById(rootView, id);
      if (btnDanhSachLop == null) {
        break missingId;
      }

      id = R.id.btnDanhSachSinhVien;
      Button btnDanhSachSinhVien = ViewBindings.findChildViewById(rootView, id);
      if (btnDanhSachSinhVien == null) {
        break missingId;
      }

      id = R.id.btnNhapLop;
      Button btnNhapLop = ViewBindings.findChildViewById(rootView, id);
      if (btnNhapLop == null) {
        break missingId;
      }

      id = R.id.btnNhapSinhVien;
      Button btnNhapSinhVien = ViewBindings.findChildViewById(rootView, id);
      if (btnNhapSinhVien == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnCreateDB, btnDanhSachLop,
          btnDanhSachSinhVien, btnNhapLop, btnNhapSinhVien);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
