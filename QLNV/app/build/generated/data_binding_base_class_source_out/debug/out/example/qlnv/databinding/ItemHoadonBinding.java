// Generated by view binder compiler. Do not edit!
package example.qlnv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import example.qlnv.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHoadonBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout itemHoaDon;

  @NonNull
  public final TextView tvMaHD;

  @NonNull
  public final TextView tvMaKH;

  @NonNull
  public final TextView tvMaNV;

  @NonNull
  public final TextView tvNgayBan;

  @NonNull
  public final TextView tvTongTien;

  private ItemHoadonBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout itemHoaDon,
      @NonNull TextView tvMaHD, @NonNull TextView tvMaKH, @NonNull TextView tvMaNV,
      @NonNull TextView tvNgayBan, @NonNull TextView tvTongTien) {
    this.rootView = rootView;
    this.itemHoaDon = itemHoaDon;
    this.tvMaHD = tvMaHD;
    this.tvMaKH = tvMaKH;
    this.tvMaNV = tvMaNV;
    this.tvNgayBan = tvNgayBan;
    this.tvTongTien = tvTongTien;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHoadonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHoadonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_hoadon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHoadonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout itemHoaDon = (LinearLayout) rootView;

      id = R.id.tvMaHD;
      TextView tvMaHD = ViewBindings.findChildViewById(rootView, id);
      if (tvMaHD == null) {
        break missingId;
      }

      id = R.id.tvMaKH;
      TextView tvMaKH = ViewBindings.findChildViewById(rootView, id);
      if (tvMaKH == null) {
        break missingId;
      }

      id = R.id.tvMaNV;
      TextView tvMaNV = ViewBindings.findChildViewById(rootView, id);
      if (tvMaNV == null) {
        break missingId;
      }

      id = R.id.tvNgayBan;
      TextView tvNgayBan = ViewBindings.findChildViewById(rootView, id);
      if (tvNgayBan == null) {
        break missingId;
      }

      id = R.id.tvTongTien;
      TextView tvTongTien = ViewBindings.findChildViewById(rootView, id);
      if (tvTongTien == null) {
        break missingId;
      }

      return new ItemHoadonBinding((LinearLayout) rootView, itemHoaDon, tvMaHD, tvMaKH, tvMaNV,
          tvNgayBan, tvTongTien);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
